<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.sylvainjanet</groupId>
	<artifactId>app</artifactId>
	<version>0.0.1</version>
	<packaging>war</packaging>
	<name>app</name>
	<description>sylvainjanet.fr backend app</description>
	<url>http://sylvain.janet.fr/app</url>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.12</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<exec.mainClass>fr.sylvainjanet.app.App</exec.mainClass>
		<jasypt.spring.boot.starter.version>3.0.5</jasypt.spring.boot.starter.version>
		<sonar.maven.plugin.version>3.9.1.2184</sonar.maven.plugin.version>
		<maven.checkstyle.plugin.version>3.3.0</maven.checkstyle.plugin.version>
		<jacoco.maven.plugin.version>0.8.10</jacoco.maven.plugin.version>
		<jasypt.maven.plugin.version>3.0.5</jasypt.maven.plugin.version>
		<snippetsDirectory>${basedir}/target-restdoc/generated-snippets</snippetsDirectory>
		<restdocs.api.spec.mockmvc.version>0.16.4</restdocs.api.spec.mockmvc.version>
		<springdoc.openapi.ui.version>1.7.0</springdoc.openapi.ui.version>
		<restdocs.spec.maven.plugin.version>0.19</restdocs.spec.maven.plugin.version>
		<maven.javadoc.plugin.version>3.5.0</maven.javadoc.plugin.version>
		<versions.maven.plugin.version>2.16.1</versions.maven.plugin.version>
	</properties>
	<pluginRepositories>
		<pluginRepository>
			<id>jcenter</id>
			<name>JCenter Repository</name>
			<url>https://jcenter.bintray.com/</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<!--
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency> -->
		<!-- https://github.com/ulisesbocchio/jasypt-spring-boot -->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.spring.boot.starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.restdocs/spring-restdocs-mockmvc -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-core</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://alainnicolas.fr/blog/make-documentation-great-again-bonus/ -->
		<dependency>
			<groupId>com.epages</groupId>
			<artifactId>restdocs-api-spec-mockmvc</artifactId>
			<version>${restdocs.api.spec.mockmvc.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://medium.com/swlh/openapi-swagger-ui-codegen-with-spring-boot-1afb1c0a570e -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.openapi.ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency> <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-failsafe-plugin -->
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-failsafe-plugin</artifactId>
			<version>3.1.2</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>7.15.0</version> <!--$NO-MVN-MAN-VER$-->
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-mysql -->
		<!-- no need https://stackoverflow.com/questions/70438180/what-is-the-last-version-of-flyway-community-edition-that-supported-mysql-5-7 -->
		<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/versions-maven-plugin -->
		<dependency>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>versions-maven-plugin</artifactId>
			<version>${versions.maven.plugin.version}</version>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
				</plugin>
				<!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<testExcludes>
							<testExclude>**/package-info.java</testExclude>
						</testExcludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.1.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.ulisesbocchio</groupId>
					<artifactId>jasypt-maven-plugin</artifactId>
					<version>${jasypt.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- https://github.com/BerkleyTechnologyServices/restdocs-spec -->
					<groupId>com.github.berkleytechnologyservices.restdocs-spec</groupId>
					<artifactId>restdocs-spec-maven-plugin</artifactId>
					<version>${restdocs.spec.maven.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<name>Demo Spring REST Docs</name>
						<version>${project.version}</version>
						<host>${api.host}</host>
						<basePath>${api.basePath}</basePath>
						<schemes>${api.scheme}</schemes>
						<outputDirectory>${project.build.outputDirectory}/static/openApi</outputDirectory>
						<filename>openApi</filename>
						<specification>OPENAPI_V3</specification>
						<description>API description for Demo Spring REST Docs service</description>
						<snippetsDirectory>${snippetsDirectory}</snippetsDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven.javadoc.plugin.version}</version>
					<executions>
						<!-- Exports JavaDocs to regular HTML files -->
						<execution>
							<id>javadoc-coverage</id>
							<phase>package</phase>
							<goals>
								<goal>javadoc</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<configuration>
						<filesets>
							<fileset>
								<directory>../app</directory>
								<includes>
									<include>target/**</include>
									<include>target-*/**</include>
								</includes>
								<followSymlinks>false</followSymlinks>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- has to be outside of plugin management, otherwise maven verify won't launch any integration test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<api.host>localhost:8080</api.host>
				<api.basePath></api.basePath>
				<api.scheme>http</api.scheme>
				<activatedProperties>dev</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-dev/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<directory>${project.basedir}/target-dev</directory>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<api.host>server.sylvainjanet.fr</api.host>
				<api.basePath>/app</api.basePath>
				<api.scheme>https</api.scheme>
				<activatedProperties>prod</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-prod/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-prod</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-unit.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>before-integration-test-execution</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-integration.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>merge-unit-and-integration</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/merged.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>check</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>CLASS</element>
											<excludes>
												<exclude>*Test</exclude>
												<exclude>*IT</exclude>
												<exclude>fr.sylvainjanet.app.*</exclude>
												<exclude>fr.sylvainjanet.app.**.*</exclude>
											</excludes>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>100%</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>staging</id>
			<properties>
				<api.host>server.sylvainjanet.fr</api.host>
				<api.basePath>/app-dev</api.basePath>
				<api.scheme>https</api.scheme>
				<activatedProperties>staging</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-staging/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-staging</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-unit.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>before-integration-test-execution</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-integration.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>merge-unit-and-integration</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/merged.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>check</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>CLASS</element>
											<excludes>
												<exclude>*Test</exclude>
												<exclude>*IT</exclude>
												<exclude>fr.sylvainjanet.app.*</exclude>
												<exclude>fr.sylvainjanet.app.**.*</exclude>
											</excludes>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>100%</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>depGraph</id>
			<properties>
				<api.host>localhost:8080</api.host>
				<api.basePath></api.basePath>
				<api.scheme>http</api.scheme>
				<activatedProperties>depGraph</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target</directory>
			</build>
		</profile>
		<profile>
			<id>update-db-struct</id>
			<properties>
				<api.host>localhost:8080</api.host>
				<api.basePath></api.basePath>
				<api.scheme>http</api.scheme>
				<activatedProperties>update-db-struct</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-update-db-struct/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-update-db-struct</directory>
			</build>
		</profile>
		<profile>
			<id>coverage-dev</id>
			<properties>
				<api.host>localhost:8080</api.host>
				<api.basePath></api.basePath>
				<api.scheme>http</api.scheme>
				<activatedProperties>coverage-dev</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-coverage-dev/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
				<sonar.coverage.exclusions>
					<!-- the members of the following list should be in the same line -->
					src/main/java/fr/sylvainjanet/app/*,src/main/java/fr/sylvainjanet/app/config/**/*
				</sonar.coverage.exclusions>
			</properties>
			<build>
				<directory>${project.basedir}/target-coverage-dev</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-unit.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-unit.exec</dataFile>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
									</excludes>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>before-integration-test-execution</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-integration.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>after-integration-test-execution</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-integration.exec</dataFile>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
										<exclude>fr/sylvainjanet/app/dtos/**/*</exclude>
										<exclude>fr/sylvainjanet/app/entities/**/*</exclude>
									</excludes>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-integration</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>merge-unit-and-integration</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/merged.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>create-merged-report</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
									</excludes>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage-staging</id>
			<properties>
				<api.host>server.sylvainjanet.fr</api.host>
				<api.basePath>/app-dev</api.basePath>
				<api.scheme>https</api.scheme>
				<activatedProperties>coverage-staging</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-coverage-staging/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
				<sonar.coverage.exclusions>
					<!-- the members of the following list should be in the same line -->
					src/main/java/fr/sylvainjanet/app/*,src/main/java/fr/sylvainjanet/app/config/**/*
				</sonar.coverage.exclusions>
			</properties>
			<build>
				<directory>${project.basedir}/target-coverage-staging</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-unit.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-unit.exec</dataFile>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
									</excludes>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>before-integration-test-execution</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-integration.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>after-integration-test-execution</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-integration.exec</dataFile>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
										<exclude>fr/sylvainjanet/app/dtos/**/*</exclude>
										<exclude>fr/sylvainjanet/app/entities/**/*</exclude>
									</excludes>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-integration</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>merge-unit-and-integration</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/merged.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>create-merged-report</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
									</excludes>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>check</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>CLASS</element>
											<excludes>
												<exclude>*Test</exclude>
												<exclude>*IT</exclude>
												<exclude>fr.sylvainjanet.app.*</exclude>
												<exclude>fr.sylvainjanet.app.**.*</exclude>
											</excludes>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>100%</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage-prod</id>
			<properties>
				<api.host>server.sylvainjanet.fr</api.host>
				<api.basePath>/app</api.basePath>
				<api.scheme>https</api.scheme>
				<activatedProperties>coverage-prod</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-coverage-prod/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
				<sonar.coverage.exclusions>
					<!-- the members of the following list should be in the same line -->
					src/main/java/fr/sylvainjanet/app/*,src/main/java/fr/sylvainjanet/app/config/**/*
				</sonar.coverage.exclusions>
			</properties>
			<build>
				<directory>${project.basedir}/target-coverage-prod</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-unit.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-unit.exec</dataFile>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
									</excludes>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>before-integration-test-execution</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${project.build.directory}/jacoco-integration.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>after-integration-test-execution</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco-integration.exec</dataFile>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
										<exclude>fr/sylvainjanet/app/dtos/**/*</exclude>
										<exclude>fr/sylvainjanet/app/entities/**/*</exclude>
									</excludes>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-integration</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>merge-unit-and-integration</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>merge</goal>
								</goals>
								<configuration>
									<fileSets>
										<fileSet>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>*.exec</include>
											</includes>
										</fileSet>
									</fileSets>
									<destFile>${project.build.directory}/merged.exec</destFile>
								</configuration>
							</execution>
							<execution>
								<id>create-merged-report</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
										<format>HTML</format>
									</formats>
									<excludes>
										<exclude>fr/sylvainjanet/app/*</exclude>
										<exclude>fr/sylvainjanet/app/config/**/*</exclude>
									</excludes>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-merged</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>check</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<rules>
										<rule>
											<element>CLASS</element>
											<excludes>
												<exclude>*Test</exclude>
												<exclude>*IT</exclude>
												<exclude>fr.sylvainjanet.app.*</exclude>
												<exclude>fr.sylvainjanet.app.**.*</exclude>
											</excludes>
											<limits>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>100%</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
									<dataFile>${project.build.directory}/merged.exec</dataFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
