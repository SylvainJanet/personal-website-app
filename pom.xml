<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.sylvainjanet</groupId>
	<artifactId>app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>app</name>
	<description>sylvainjanet.fr backend app</description>
	<url>http://sylvain.janet.fr/app</url>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.12</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<exec.mainClass>fr.sylvainjanet.app.App</exec.mainClass>
		<jasypt.spring.boot.starter.version>3.0.5</jasypt.spring.boot.starter.version>
		<sonar.maven.plugin.version>3.9.1.2184</sonar.maven.plugin.version>
		<maven.checkstyle.plugin.version>3.3.0</maven.checkstyle.plugin.version>
		<jacoco.maven.plugin.version>0.8.10</jacoco.maven.plugin.version>
		<jasypt.maven.plugin.version>3.0.5</jasypt.maven.plugin.version>
		<snippetsDirectory>${basedir}/target-restdoc/generated-snippets</snippetsDirectory>
		<restdocs.api.spec.mockmvc.version>0.16.4</restdocs.api.spec.mockmvc.version>
		<springdoc.openapi.ui.version>1.7.0</springdoc.openapi.ui.version>
		<restdocs.spec.maven.plugin.version>0.19</restdocs.spec.maven.plugin.version>
	</properties>
	<repositories>
		<repository>
			<id>jcenter</id>
			<name>JCenter repository</name>
			<url>https://jcenter.bintray.com</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>jcenter</id>
			<name>JCenter repository</name>
			<url>https://jcenter.bintray.com</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://github.com/ulisesbocchio/jasypt-spring-boot -->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>${jasypt.spring.boot.starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.restdocs/spring-restdocs-mockmvc -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-core</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://alainnicolas.fr/blog/make-documentation-great-again-bonus/ -->
		<dependency>
			<groupId>com.epages</groupId>
			<artifactId>restdocs-api-spec-mockmvc</artifactId>
			<version>${restdocs.api.spec.mockmvc.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- https://medium.com/swlh/openapi-swagger-ui-codegen-with-spring-boot-1afb1c0a570e -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>${springdoc.openapi.ui.version}</version>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
				</plugin>
				<!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<testExcludes>
							<testExclude>**/package-info.java</testExclude>
						</testExcludes>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.maven.pluginh.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.ulisesbocchio</groupId>
					<artifactId>jasypt-maven-plugin</artifactId>
					<version>${jasypt.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<!-- https://github.com/BerkleyTechnologyServices/restdocs-spec -->
					<groupId>com.github.berkleytechnologyservices.restdocs-spec</groupId>
					<artifactId>restdocs-spec-maven-plugin</artifactId>
					<version>${restdocs.spec.maven.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<name>Demo Spring REST Docs</name>
						<version>${project.version}</version>
						<host>${api.url}</host>
						<outputDirectory>${project.build.outputDirectory}/static/openApi</outputDirectory>
						<filename>openApi</filename>
						<specification>OPENAPI_V3</specification>
						<description>API description for Demo Spring REST Docs service</description>
						<snippetsDirectory>${snippetsDirectory}</snippetsDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<api.url>localhost:8080</api.url>
				<activatedProperties>dev</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-dev/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<directory>${project.basedir}/target-dev</directory>
			</build>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<api.url>server.sylvainjanet.fr</api.url>
				<activatedProperties>prod</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-prod/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-prod</directory>
			</build>
		</profile>
		<profile>
			<id>staging</id>
			<properties>
				<api.url>server.sylvainjanet.fr</api.url>
				<activatedProperties>staging</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-staging/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-staging</directory>
			</build>
		</profile>
		<profile>
			<id>depGraph</id>
			<properties>
				<api.url>localhost:8080</api.url>
				<activatedProperties>depGraph</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target</directory>
			</build>
		</profile>
		<profile>
			<id>update-db-struct</id>
			<properties>
				<api.url>localhost:8080</api.url>
				<activatedProperties>update-db-struct</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-update-db-struct/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-update-db-struct</directory>
			</build>
		</profile>
		<profile>
			<id>coverage-dev</id>
			<properties>
				<api.url>localhost:8080</api.url>
				<activatedProperties>coverage-dev</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-coverage-dev/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-coverage-dev</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
									</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage-staging</id>
			<properties>
				<api.url>server.sylvainjanet.fr</api.url>
				<activatedProperties>coverage-staging</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-coverage-staging/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-coverage-staging</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
									</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage-prod</id>
			<properties>
				<api.url>server.sylvainjanet.fr</api.url>
				<activatedProperties>coverage-prod</activatedProperties>
				<sonar.coverage.jacoco.xmlReportPaths>
    				${project.basedir}/target-coverage-prod/site/jacoco/jacoco.xml
  				</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<directory>${project.basedir}/target-coverage-prod</directory>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.8.7</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<formats>
										<format>XML</format>
									</formats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
